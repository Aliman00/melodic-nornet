Installation Guide: https://docs.openstack.org/ocata/install-guide-ubuntu/index.html

= Custom Repositories =

 sudo apt-add-repository -s -y ppa:dreibh/ppa
 sudo add-apt-repository -s -y cloud-archive:pike
 sudo apt-get update
 sudo apt-get install melodic-management melodic-server

= Server Configurations =

* Controller: 10.1.1.79 (nisse.simula.nornet)
* Compute Node 1: 10.1.1.78 (troll.simula.nornet)
* Compute Node 2: 10.1.1.77 (huldra.simula.nornet)

/etc/hosts must contain the corresponding names!

== Controller ==

=== /etc/hosts on nisse.simula.nornet ===
 127.0.0.1       localhost
 10.1.1.79       nisse.simula.nornet nisse
 ...

* eth0: NorNet, 10.1.1.79
* eth1: UNINETT

=== /etc/sysctl.conf on nisse.simula.nornet ===
 ...
 # ====== MELODIC/NorNet Core ======
 net.ipv6.conf.all.autoconf=0
 net.ipv6.conf.default.autoconf=0
 net.ipv6.conf.eth0.autoconf=0
 net.ipv6.conf.eth1.autoconf=0
 # ====== MELODIC/NorNet Core ======

=== /etc/hosts on troll.simula.nornet ===
 127.0.0.1       localhost
 10.1.1.78       troll.simula.nornet troll
 ...

* eth0: NorNet, 10.1.1.78
* eth1: UNINETT
* eth2: NorNet (no address configured -> for bridging VMs)

=== /etc/sysctl.conf on troll.simula.nornet ===
 ...
 # ====== MELODIC/NorNet Core ======
 net.ipv6.conf.all.autoconf=0
 net.ipv6.conf.default.autoconf=0
 net.ipv6.conf.eth0.autoconf=0
 net.ipv6.conf.eth1.autoconf=0
 net.ipv6.conf.eth2.autoconf=0
 # ====== MELODIC/NorNet Core ======

These settings are important, since unexpected IPv6 addresses will cause Neutron configuration of a new instance to fail!

=== /etc/hosts on huldra.simula.nornet ===
 127.0.0.1       localhost
 10.1.1.77       huldra.simula.nornet huldra
 ...

* eth0: NorNet, 10.1.1.77
* eth1: UNINETT
* eth2: NorNet (no address configured -> for bridging VMs)

=== /etc/sysctl.conf on huldra.simula.nornet ===
 ...
 # ====== MELODIC/NorNet Core ======
 net.ipv6.conf.all.autoconf=0
 net.ipv6.conf.default.autoconf=0
 net.ipv6.conf.eth0.autoconf=0
 net.ipv6.conf.eth1.autoconf=0
 net.ipv6.conf.eth2.autoconf=0
 # ====== MELODIC/NorNet Core ======

These settings are important, since unexpected IPv6 addresses will cause Neutron configuration of a new instance to fail!

= Controller Basics =

sudo apt install melodic-controller

== MariaDB Database ==

Details: [https://docs.openstack.org/ocata/install-guide-ubuntu/environment-sql-database.html]

=== /etc/mysql/mariadb.conf.d/99-openstack.cnf ===

Create /etc/mysql/mariadb.conf.d/99-openstack.cnf:
 [mysqld]
 bind-address = 10.1.1.79
 default-storage-engine = innodb
 innodb_file_per_table = on
 max_connections = 4096
 collation-server = utf8_general_ci
 character-set-server = utf8

=== Restart MariaDB ===
 sudo service mysql restart

=== Security configuration ===
 sudo mysql_secure_installation

Settings:
* Generate and set MariaDB root password, referred as <MariaDB-Root-Password>.
* Remove anonymous users
* Disallow root login from remote
* Remove test database

== RabbitMQ Message Queue ==

Details: [https://docs.openstack.org/ocata/install-guide-ubuntu/environment-messaging.html]

Create RabbitMQ user "openstack" and set password, referred as <RabbitMQ-openstack-Password>.

 sudo rabbitmqctl add_user openstack <RabbitMQ-openstack-Password>
 sudo rabbitmqctl set_permissions openstack ".*" ".*" ".*"

== Memcached Memory Cache Daemon ==

Details: [https://docs.openstack.org/ocata/install-guide-ubuntu/environment-memcached.html]

=== /etc/memcached.conf ===
Modify /etc/memcached.conf:
 ...
 # Specify which IP address to listen on. The default is to listen on all IP addresses
 # This parameter is one of the only security measures that memcached has, so make sure
 # it's listening on a firewalled interface.
 -l 10.1.1.79
 ...

=== Restart Memcached ===
 sudo service memcached restart

= Identity Service (Keystone) =

Details: [https://docs.openstack.org/ocata/install-guide-ubuntu/keystone.html]

== Keystone Database ==

Generate MariaDB Keystone Password, referred as <MariaDB-Keystone-Password>.

 sudo mysql

In MariaDB shell:

 CREATE DATABASE keystone;
 GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'localhost' IDENTIFIED BY '<MariaDB-Keystone-Password>';
 GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'%' IDENTIFIED BY '<MariaDB-Keystone-Password>';
 FLUSH PRIVILEGES;

== Identity Service ==

=== Keystone ===

Details: [https://docs.openstack.org/ocata/install-guide-ubuntu/keystone-install.html]

==== /etc/keystone/keystone.conf ====

Modify /etc/keystone/keystone.conf (set database access):
 [database]
 ...
 connection = mysql+pymysql://keystone:<MariaDB-Keystone-Password>@nisse.simula.nornet/keystone
 ...

Modify /etc/keystone/keystone.conf (set token provider):
 [token]
 ...
 provider = fernet
 ...

==== Populate the Identity service database ====

 sudo su -s /bin/sh -c "keystone-manage db_sync" keystone

Check error log (leave it running in another shell):

 sudo tail -f /var/log/keystone/keystone-manage.log

==== Initialize Fernet key repositories ====

 sudo keystone-manage fernet_setup --keystone-user keystone --keystone-group keystone
 sudo keystone-manage credential_setup --keystone-user keystone --keystone-group keystone

==== Bootstrap the Identity service ====

 sudo keystone-manage bootstrap --bootstrap-password <Keystone-admin-Password> \
    --bootstrap-admin-url http://nisse.simula.nornet:35357/v3/ \
    --bootstrap-internal-url http://nisse.simula.nornet:5000/v3/ \
    --bootstrap-public-url http://nisse.simula.nornet:5000/v3/ \
    --bootstrap-region-id RegionOne

=== Apache ===

==== /etc/apache2/apache2.conf ====

Modify /etc/apache2/apache2.conf (set ServerName to "nisse"):
 ...
 ServerName nisse.simula.nornet
 ...

==== Restart Apache and remove initial SQLite database ====

 sudo service apache2 restart
 sudo rm -f /var/lib/keystone/keystone.db

=== Admin User Environment ===

Configure environment of user "nornetpp"

Add to ~nornetpp/.bashrc:
 # ====== MELODIC/NorNet Core ======
 export OS_USERNAME="admin"
 export OS_PASSWORD="<Keystone-admin-Password>"
 export OS_PROJECT_NAME="admin"
 export OS_USER_DOMAIN_NAME="Default"
 export OS_PROJECT_DOMAIN_NAME="Default"
 export OS_AUTH_URL="http://nisse.simula.nornet:35357/v3"
 export OS_IDENTITY_API_VERSION=3
 # ====== MELODIC/NorNet Core ======

As "nornetpp":
 source ~/.bashrc

=== Projects, Users and Roles ===

Details: [https://docs.openstack.org/ocata/install-guide-ubuntu/keystone-users.html]

Run as "nornetpp":

Project "Service":

 openstack project create --domain default --description "Service Project" service

It will be used for services like Glance.

Project "NorNet Core":

 openstack project create --domain default --description "NorNet Core Project" nnc

User for "NorNet Core" (with password referred as <Keystone-nnc-Password>):

 openstack user create --domain default --password <Keystone-nnc-Password> nnc

 openstack role create user
 openstack role add --project nnc --user nnc user

== Verify operation ==

Temporary disable authentication settings in environment variables:
 unset OS_AUTH_URL OS_PASSWORD

Check to get authentication token as user "admin" (needs <Keystone-admin-Password>):
 openstack --os-auth-url http://nisse.simula.nornet:35357/v3 \
  --os-project-domain-name default \
  --os-user-domain-name default \
  --os-project-name admin --os-username admin token issue

Check to get authentication token as user "nnc" (needs <Keystone-admin-Password>):
 openstack --os-auth-url http://nisse.simula.nornet:5000/v3 \
  --os-project-domain-name default \
  --os-user-domain-name default \
  --os-project-name nnc --os-username nnc token issue

= Image Service (Glance) =

Details: [https://docs.openstack.org/ocata/install-guide-ubuntu/common/get-started-image-service.html]

== Glance Database ==

Generate MariaDB Glance Password, referred as <MariaDB-glance-Password>.
 sudo mysql

In MariaDB shell:
 CREATE DATABASE glance;
 GRANT ALL PRIVILEGES ON glance.* TO 'glance'@'localhost' IDENTIFIED BY '<MariaDB-glance-Password>';
 GRANT ALL PRIVILEGES ON glance.* TO 'glance'@'%' IDENTIFIED BY '<MariaDB-glance-Password>';
 FLUSH PRIVILEGES;

== Create Image service ==

Create user "glance" with "admin" role (with password referred as <Keystone-glance-Password>):
 openstack user create --domain default --password <Keystone-glance-Password> glance
 openstack role add --project service --user glance admin

Create Image service:
 openstack service create --name glance --description "OpenStack Image" image

Create Image service API endpoints:
 openstack endpoint create --region RegionOne image public http://nisse.simula.nornet:9292
 openstack endpoint create --region RegionOne image internal http://nisse.simula.nornet:9292
 openstack endpoint create --region RegionOne image admin http://nisse.simula.nornet:9292

== Configure Glance ==

=== /etc/glance/glance-api.conf ===

Modify /etc/glance/glance-api.conf:
 [database]
 ...
 connection = mysql+pymysql://glance:<MariaDB-glance-Password>@nisse.simula.nornet/glance
 ...

 [keystone_authtoken]
 ...
 # ====== MELODIC/NorNet Core ======
 auth_uri = http://nisse.simula.nornet:5000
 auth_url = http://nisse.simula.nornet:35357
 memcached_servers = nisse.simula.nornet:11211
 auth_type = password
 project_domain_name = default
 user_domain_name = default
 project_name = service
 username = glance
 password = <Keystone-glance-Password>
 # ====== MELODIC/NorNet Core ======

 [paste_deploy]
 ...
 flavor = keystone

 [glance_store]
 ...
 # ====== MELODIC/NorNet Core ======
 stores = file,http
 default_store = file
 filesystem_store_datadir = /var/lib/glance/images/
 # ====== MELODIC/NorNet Core ======

=== /etc/glance/glance-registry.conf ===

Modify /etc/glance/glance-registry.conf:
 [database]
 ...
 connection = mysql+pymysql://glance:<MariaDB-glance-Password>@nisse.simula.nornet/glance
 ...

 [keystone_authtoken]
 ...
 # ====== MELODIC/NorNet Core ======
 auth_uri = http://nisse.simula.nornet:5000
 auth_url = http://nisse.simula.nornet:35357
 memcached_servers = nisse.simula.nornet:11211
 auth_type = password
 project_domain_name = default
 user_domain_name = default
 project_name = service
 username = glance
 password = <Keystone-glance-Password>
 # ====== MELODIC/NorNet Core ======

 [paste_deploy]
 ...
 flavor = keystone

=== Populate the Image service database ===
 sudo su -s /bin/sh -c "glance-manage db_sync" glance

=== Restart the Image services ===
 sudo service glance-registry restart
 sudo service glance-api restart

== Verify operation ==

=== Cirros Image ===

 wget -c http://download.cirros-cloud.net/0.3.5/cirros-0.3.5-x86_64-disk.img
 openstack image create "Cirros-0.3.5-amd64" \
    --file cirros-0.3.5-x86_64-disk.img \
    --disk-format qcow2 --container-format bare \
    --public
 openstack image set --property architecture=amd64 "Cirros-0.3.5-amd64"
 openstack image list
 # openstack image delete "Cirros-0.3.5-amd64"

=== Ubuntu Images ===

 wget -c http://no.releases.ubuntu.com/16.04.3/ubuntu-16.04.3-server-amd64.iso
 openstack image create "Install-Ubuntu-Server-16.04.3-amd64" \
    --file ubuntu-16.04.3-server-amd64.iso \
    --disk-format iso --container-format bare \
    --public
 openstack image set --property architecture=amd64 "Ubuntu-Server-16.04.3-amd64"
 openstack image list
 # openstack image delete "Install-Ubuntu-Server-16.04.3-amd64"

 wget -c http://no.releases.ubuntu.com/17.04/ubuntu-17.04-desktop-amd64.iso
 openstack image create "Install-Ubuntu-Desktop-17.04-amd64" \
    --file ubuntu-17.04-desktop-amd64.iso \
    --disk-format iso --container-format bare \
    --public
 openstack image set --property architecture=amd64 "Ubuntu-Desktop-17.04-amd64"
 openstack image list
 # openstack image delete "Install-Ubuntu-Desktop-17.04-amd64"

 wget -c cdimage.ubuntu.com/kubuntu/releases/17.04/release/kubuntu-17.04-desktop-amd64.iso
 openstack image create "Install-Kubuntu-Desktop-17.04-amd64" \
    --file kubuntu-17.04-desktop-amd64.iso \
    --disk-format iso --container-format bare \
    --public
 openstack image set --property architecture=amd64 "Ubuntu-Desktop-17.04-amd64"
 openstack image list
 # openstack image delete "Install-Kubuntu-Desktop-17.04-amd64"

= Compute Service (Nova) =

Details: [https://docs.openstack.org/ocata/install-guide-ubuntu/common/get-started-compute.html]

sudo apt install melodic-compute

=== Prepare Controller ===

==== Nova Database ====

Generate MariaDB Nova Password, referred as <MariaDB-nova-Password>.
 sudo mysql

In MariaDB shell:
 CREATE DATABASE nova_api;
 CREATE DATABASE nova;
 CREATE DATABASE nova_cell0;
 GRANT ALL PRIVILEGES ON nova_api.* TO 'nova'@'localhost' IDENTIFIED BY '<MariaDB-nova-Password>';
 GRANT ALL PRIVILEGES ON nova_api.* TO 'nova'@'%' IDENTIFIED BY '<MariaDB-nova-Password>';
 GRANT ALL PRIVILEGES ON nova.* TO 'nova'@'localhost' IDENTIFIED BY '<MariaDB-nova-Password>';
 GRANT ALL PRIVILEGES ON nova.* TO 'nova'@'%' IDENTIFIED BY '<MariaDB-nova-Password>';
 GRANT ALL PRIVILEGES ON nova_cell0.* TO 'nova'@'localhost' IDENTIFIED BY '<MariaDB-nova-Password>';
 GRANT ALL PRIVILEGES ON nova_cell0.* TO 'nova'@'%' IDENTIFIED BY '<MariaDB-nova-Password>';
 FLUSH PRIVILEGES;

==== Create Compute service ====

Create user "nova" with "admin" role (with password referred as <Keystone-nova-Password>):
 openstack user create --domain default --password <Keystone-nova-Password> nova
 openstack role add --project service --user nova admin

Create Compute service:
 openstack service create --name nova --description "OpenStack Compute" compute

Create Compute service API endpoints:
 openstack endpoint create --region RegionOne compute public http://nisse.simula.nornet:8774/v2.1
 openstack endpoint create --region RegionOne compute internal http://nisse.simula.nornet:8774/v2.1
 openstack endpoint create --region RegionOne compute admin http://nisse.simula.nornet:8774/v2.1

Create user "placement" with "admin" role (with password referred as <Keystone-placement-Password>):
 openstack user create --domain default --password <Keystone-placement-Password> placement
 openstack role add --project service --user placement admin

Create Placement service:
 openstack service create --name placement --description "Placement API" placement

Create Placement service API endpoints:
 openstack endpoint create --region RegionOne placement public http://nisse.simula.nornet:8778
 openstack endpoint create --region RegionOne placement internal http://nisse.simula.nornet:8778
 openstack endpoint create --region RegionOne placement admin http://nisse.simula.nornet:8778

==== /etc/nova/nova.conf ====

Modify /etc/nova/nova.conf:
 [api_database]
 connection = mysql+pymysql://nova:<MariaDB-nova-Password>@nisse.simula.nornet/nova_api
 ...

 [database]
 connection = mysql+pymysql://nova:<MariaDB-nova-Password>@nisse.simula.nornet/nova
 ...

 [DEFAULT]
 ...
 transport_url = rabbit://openstack:<RabbitMQ-openstack-Password>@nisse.simula.nornet
 ...
 my_ip = 10.1.1.79
 ...
 use_neutron = True
 ...
 firewall_driver = nova.virt.firewall.NoopFirewallDriver
 ...

 [api]
 ...
 auth_strategy = keystone
 ...

 [keystone_authtoken]
 ...
 # ====== MELODIC/NorNet Core ======
 auth_uri = http://nisse.simula.nornet:5000
 auth_url = http://nisse.simula.nornet:35357
 memcached_servers = nisse.simula.nornet:11211
 auth_type = password
 project_domain_name = default
 user_domain_name = default
 project_name = service
 username = nova
 password = <Keystone-nova-Password>
 # ====== MELODIC/NorNet Core ======

 [vnc]
 ...
 enabled = true
 ...
 vncserver_listen = $my_ip
 vncserver_proxyclient_address = $my_ip

 [glance]
 ...
 api_servers = http://nisse.simula.nornet:9292
 ...

 [oslo_concurrency]
 ...
 lock_path = /var/lib/nova/tmp
 ...

 [placement]
 ...
 # ====== MELODIC/NorNet Core ======
 os_region_name = RegionOne
 project_domain_name = Default
 project_name = service
 auth_type = password
 user_domain_name = Default
 auth_url = http://nisse.simula.nornet:35357/v3
 username = placement
 password = <Keystone-placement-Password>
 # ====== MELODIC/NorNet Core ======

 [scheduler]
 ...
 discover_hosts_in_cells_interval = 300
 ...

==== Populate the nova-api database ====
 sudo su -s /bin/sh -c "nova-manage api_db sync" nova

==== Register the cell0 and cell1 databases ==== 
 sudo su -s /bin/sh -c "nova-manage cell_v2 map_cell0" nova
 sudo su -s /bin/sh -c "nova-manage cell_v2 create_cell --name=cell1 --verbose" nova 109e1d4b-536a-40d0-83c6-5f121b82b650

==== Populate the nova database ==== 
 sudo su -s /bin/sh -c "nova-manage db sync" nova

==== Verify cell0 and cell1 database registrations ====
 sudo nova-manage cell_v2 list_cells

==== Restart services ====
 sudo service nova-api restart
 sudo service nova-consoleauth restart
 sudo service nova-scheduler restart
 sudo service nova-conductor restart
 sudo service nova-novncproxy restart

=== Prepare Compute Node ===

Details: [https://docs.openstack.org/ocata/install-guide-ubuntu/nova-compute-install.html]

Modify /etc/nova/nova.conf:
 [DEFAULT]
 ...
 transport_url = rabbit://openstack:<RabbitMQ-openstack-Password>@nisse.simula.nornet
 ...
 my_ip = <IPv4-Address-of-Node>
 ...
 use_neutron = True
 ...
 firewall_driver = nova.virt.firewall.NoopFirewallDriver
 ...

 [api]
 ...
 auth_strategy = keystone
 ...

 [keystone_authtoken]
 ...
 # ====== MELODIC/NorNet Core ======
 auth_uri = http://nisse.simula.nornet:5000
 auth_url = http://nisse.simula.nornet:35357
 memcached_servers = nisse.simula.nornet:11211
 auth_type = password
 project_domain_name = default
 user_domain_name = default
 project_name = service
 username = nova
 password = <Keystone-nova-Password>
 # ====== MELODIC/NorNet Core ======

 [vnc]
 ...
 enabled = true
 ...
 vncserver_listen = 0.0.0.0
 vncserver_proxyclient_address = $my_ip
 novncproxy_base_url = http://nisse.simula.nornet:6080/vnc_auto.html

 [glance]
 ...
 api_servers = http://nisse.simula.nornet:9292
 ...

 [oslo_concurrency]
 ...
 lock_path = /var/lib/nova/tmp
 ...

 [placement]
 ...
 # ====== MELODIC/NorNet Core ======
 os_region_name = RegionOne
 project_domain_name = Default
 project_name = service
 auth_type = password
 user_domain_name = Default
 auth_url = http://nisse.simula.nornet:35357/v3
 username = placement
 password = <Keystone-placement-Password>
 # ====== MELODIC/NorNet Core ======

Restart service (logfile is /var/log/nova/nova-compute.log):
 sudo service nova-compute restart

Add the new Compute Node (run <b>on the Controller</b>!):
 sudo su -s /bin/sh -c "nova-manage cell_v2 discover_hosts --verbose" nova
 openstack hypervisor list

discover_hosts_in_cells_interval=300 <b>on the Controller</b> applies automatic discovery of new compute nodes. "nova-manage cell_v2 discover_hosts" runs the discovery manually.

=== Verify operation ===

Details: [https://docs.openstack.org/ocata/install-guide-ubuntu/nova-verify.html]

Run <b>on the Controller</b>:
 openstack compute service list

This output should indicate three service components enabled on the controller node and one service component enabled on each compute node.

 openstack catalog list

 openstack image list

 sudo nova-status upgrade check

= Networking Service (Neutron) =

Details: [https://docs.openstack.org/ocata/install-guide-ubuntu/neutron-controller-install.html]

== Neutron Database ==

Generate MariaDB Neutron Password, referred as <MariaDB-neutron-Password>.
 sudo mysql

In MariaDB shell:
 CREATE DATABASE neutron;
 GRANT ALL PRIVILEGES ON neutron.* TO 'neutron'@'localhost' IDENTIFIED BY 'NEUTRON_DBPASS';
 GRANT ALL PRIVILEGES ON neutron.* TO 'neutron'@'%' IDENTIFIED BY 'NEUTRON_DBPASS';
 FLUSH PRIVILEGES;

== Create Networking service ==

Create user "neutron" with "admin" role (with password referred as <Keystone-neutron-Password>):
 openstack user create --domain default --password <Keystone-neutron-Password> neutron
 openstack role add --project service --user neutron admin

Create Networking service:
 openstack service create --name neutron --description "OpenStack Networking" network

Create Networking service API endpoints:
 openstack endpoint create --region RegionOne network public http://nisse.simula.nornet:9696
 openstack endpoint create --region RegionOne network internal http://nisse.simula.nornet:9696
 openstack endpoint create --region RegionOne network admin http://nisse.simula.nornet:9696

== Configure Neutron ==

Details: [https://docs.openstack.org/ocata/install-guide-ubuntu/neutron-controller-install-option2.html]

<b>MELODIC/NorNet is using "Networking Option 2: Self-service networks"</b>

=== Controller ===

==== /etc/neutron/neutron.conf ====

Modify /etc/neutron/neutron.conf:

 [database]
 ...
 connection = mysql+pymysql://neutron:<MariaDB-neutron-Password>@nisse.simula.nornet/neutron
 ...

 [DEFAULT]
 ...
 transport_url = rabbit://openstack:<RabbitMQ-openstack-Password>@nisse.simula.nornet
 ...

 [DEFAULT]
 ...
 core_plugin = ml2
 ...
 service_plugins = router
 ...
 allow_overlapping_ips = true
 ...
 notify_nova_on_port_status_changes = true
 notify_nova_on_port_data_changes = true
 ...

 [api]
 ...
 auth_strategy = keystone
 ...

 [keystone_authtoken]
 ...
 # ====== MELODIC/NorNet Core ======
 auth_uri = http://nisse.simula.nornet:5000
 auth_url = http://nisse.simula.nornet:35357
 memcached_servers = nisse.simula.nornet:11211
 auth_type = password
 project_domain_name = default
 user_domain_name = default
 project_name = service
 username = neutron
 password = <Keystone-neutron-Password>
 # ====== MELODIC/NorNet Core ======

 [nova]
 ...
 # ====== MELODIC/NorNet Core ======
 auth_url = http://nisse.simula.nornet:35357
 auth_type = password
 project_domain_name = default
 user_domain_name = default
 region_name = RegionOne
 project_name = service
 username = nova
 password = <Keystone-nova-Password>
 # ====== MELODIC/NorNet Core ======

==== /etc/neutron/plugins/ml2/ml2_conf.ini ====

Modify /etc/neutron/plugins/ml2/ml2_conf.ini:
 [ml2]
 type_drivers = flat,vlan,vxlan
 tenant_network_types = vxlan
 mechanism_drivers = linuxbridge,l2population
 extension_drivers = port_security
 ...

 [ml2_type_flat]
 flat_networks = uninett-simula,nornet-simula
 ...

 [ml2_type_vxlan]
 vni_ranges = 1:1000
 ...

 [securitygroup]
 ...
 enable_ipset = true
 ...

==== /etc/neutron/plugins/ml2/linuxbridge_agent.ini ====

Modify /etc/neutron/plugins/ml2/linuxbridge_agent.ini:
 [linux_bridge]
 physical_interface_mappings = nornet-simula:eth2,uninett-simula:eth1
 ...

Note: eth2 is used here for NorNet, not eth0!

Assuming NorNet on eth0 and UNINETT on eth1.
 [vxlan]
 enable_vxlan = true
 local_ip = 10.1.1.79  
 l2_population = true

 [securitygroup]
 firewall_driver = neutron.agent.linux.iptables_firewall.IptablesFirewallDriver
 enable_security_group = true
 enable_ipset = true

==== /etc/neutron/l3_agent.ini ====

Modify /etc/neutron/l3_agent.ini:
 [DEFAULT]
 ...
 interface_driver = linuxbridge
 ...

==== /etc/neutron/dhcp_agent.ini ====

Modify /etc/neutron/dhcp_agent.ini:
 [DEFAULT]
 ...
 interface_driver = linuxbridge
 ...
 dhcp_driver = neutron.agent.linux.dhcp.Dnsmasq
 enable_isolated_metadata = true
 ...

==== /etc/neutron/metadata_agent.ini ====

Modify /etc/neutron/metadata_agent.ini:
 [DEFAULT]
 ...
 nova_metadata_host = nisse.simula.nornet
 metadata_proxy_shared_secret = <Neutron-Metadata-Secret>

 <Neutron-Metadata-Secret> is a generated password.

==== /etc/nova/nova.conf ====

Modify /etc/nova/nova.conf:

 [neutron]
 ...
 # ====== MELODIC/NorNet Core ======
 url = http://nisse.simula.nornet:9696
 auth_url = http://nisse.simula.nornet:35357
 auth_type = password
 project_domain_name = default
 user_domain_name = default
 region_name = RegionOne
 project_name = service
 username = neutron
 password = <Keystone-neutron-password>
 service_metadata_proxy = true
 metadata_proxy_shared_secret = <Neutron-Metadata-Secret>
 # ====== MELODIC/NorNet Core ======

=== /etc/neutron/plugins/ml2/linuxbridge_agent.ini ===

Modify /etc/neutron/plugins/ml2/linuxbridge_agent.ini:

 [linux_bridge]
 physical_interface_mappings = nornet:eth0,uninett:eth1
 ...

 Assuming NorNet on eth0 and UNINETT on eth1.

 [vxlan]
 enable_vxlan = true
 local_ip = 10.1.1.78
 l2_population = true

 [securitygroup]
 firewall_driver = neutron.agent.linux.iptables_firewall.IptablesFirewallDriver
 enable_security_group = true
 enable_ipset = true

==== Update services ====

 sudo su -s /bin/sh -c "neutron-db-manage --config-file /etc/neutron/neutron.conf \
    --config-file /etc/neutron/plugins/ml2/ml2_conf.ini upgrade head" neutron
 sudo service nova-api restart
 sudo service neutron-server restart
 sudo service neutron-linuxbridge-agent restart
 sudo service neutron-dhcp-agent restart
 sudo service neutron-metadata-agent restart
 sudo service neutron-l3-agent restart

=== Compute Node ===

Details: [https://docs.openstack.org/ocata/install-guide-ubuntu/neutron-compute-install.html]

==== /etc/neutron/neutron.conf ====

Modify /etc/neutron/neutron.conf:

 [DEFAULT]
 ...
 transport_url = rabbit://openstack:<RabbitMQ-openstack-Password>@nisse.simula.nornet
 ...
 auth_strategy = keystone
 ...

 [keystone_authtoken]
 ...
 # ====== MELODIC/NorNet Core ======
 auth_uri = http://nisse.simula.nornet:5000
 auth_url = http://nisse.simula.nornet:35357
 memcached_servers = nisse.simula.nornet:11211
 auth_type = password
 project_domain_name = default
 user_domain_name = default
 project_name = service
 username = neutron
 password = <Keystone-neutron-Password>
 # ====== MELODIC/NorNet Core ======

Comment out "connection" option:

 [database]
  # connection = sqlite:////var/lib/neutron/neutron.sqlite

==== /etc/nova/nova.conf ====

Modify /etc/nova/nova.conf:
 [neutron]
 ...
 # ====== MELODIC/NorNet Core ======
 url = http://nisse.simula.nornet:9696
 auth_url = http://nisse.simula.nornet:35357
 auth_type = password
 project_domain_name = default
 user_domain_name = default
 region_name = RegionOne
 project_name = service
 username = neutron
 password = <Keystone-neutron-Password>
 service_metadata_proxy = true
 metadata_proxy_shared_secret = <Neutron-Metadata-Secret>
 # ====== MELODIC/NorNet Core ======

==== /etc/neutron/plugins/ml2/linuxbridge_agent.ini ====

Modify /etc/neutron/plugins/ml2/linuxbridge_agent.ini:
 [DEFAULT]
 ...
 local_ip=10.1.1.78

==== Restart services ====

 sudo service nova-compute restart
 sudo service neutron-linuxbridge-agent restart

== Verify operation ==

Details: [https://docs.openstack.org/ocata/install-guide-ubuntu/neutron-verify.html] and [https://docs.openstack.org/ocata/install-guide-ubuntu/neutron-verify-option2.html]

 openstack extension list --network

This checks the successful launch of the neutron-server process.

 openstack network agent list

This should show 4 agents on the controller, and one per compute node.

= Block Storage Service (Cinder) =

Details: [https://docs.openstack.org/ocata/install-guide-ubuntu/cinder-controller-install.html]

== Controller ==

Details: [https://docs.openstack.org/ocata/install-guide-ubuntu/cinder-controller-install.html]

=== Cinder Database ===

Generate MariaDB Cinder Password, referred as <MariaDB-cinder-Password>.
 sudo mysql

In MariaDB shell:
 CREATE DATABASE cinder;
 GRANT ALL PRIVILEGES ON cinder.* TO 'cinder'@'localhost' IDENTIFIED BY '<MariaDB-cinder-Password>';
 GRANT ALL PRIVILEGES ON cinder.* TO 'cinder'@'%' IDENTIFIED BY '<MariaDB-cinder-Password>';
 FLUSH PRIVILEGES;

== Create Block Storage service ==

Create user "cinder" with "admin" role (with password referred as <Keystone-cinder-Password>):
 openstack user create --domain default --password <Keystone-cinder-Password> cinder
 openstack role add --project service --user cinder admin

Create Block Storage service:
 openstack service create --name cinderv2 --description "OpenStack Block Storage" volumev2
 openstack service create --name cinderv3 --description "OpenStack Block Storage" volumev3

Create Block Storage service API endpoints:
 openstack endpoint create --region RegionOne volumev2 public http://nisse.simula.nornet:8776/v2/%\(project_id\)s
 openstack endpoint create --region RegionOne volumev2 internal http://nisse.simula.nornet:8776/v2/%\(project_id\)s
 openstack endpoint create --region RegionOne volumev2 admin http://nisse.simula.nornet:8776/v2/%\(project_id\)s
 openstack endpoint create --region RegionOne volumev3 public http://nisse.simula.nornet:8776/v3/%\(project_id\)s
 openstack endpoint create --region RegionOne volumev3 internal http://nisse.simula.nornet:8776/v3/%\(project_id\)s
 openstack endpoint create --region RegionOne volumev3 admin http://nisse.simula.nornet:8776/v3/%\(project_id\)s

=== Configure Cinder ===

==== /etc/cinder/cinder.conf ====

Modify /etc/cinder/cinder.conf:
 [DEFAULT]
 ...
 transport_url = rabbit://openstack:<RabbitMQ-openstack-Password>@nisse.simula.nornet
 ...
 auth_strategy = keystone
 ...
 my_ip = 10.1.1.79
 ...

 [database]
 connection = mysql+pymysql://cinder:<MariaDB-cinder-Password>@nisse.simula.nornet/cinder

 [keystone_authtoken]
 # ====== MELODIC/NorNet Core ======
 auth_uri = http://nisse.simula.nornet:5000
 auth_url = http://nisse.simula.nornet:35357
 memcached_servers = nisse.simula.nornet:11211
 auth_type = password
 project_domain_name = default
 user_domain_name = default
 project_name = service
 username = cinder
 password = <Keystone-cinder-Password>
 # ====== MELODIC/NorNet Core ======

 [oslo_concurrency]
 lock_path = /var/lib/cinder/tmp

Populate the Block Storage service database:
 sudo su -s /bin/sh -c "cinder-manage db sync" cinder

==== /etc/nova/nova.conf ====

Modify /etc/nova/nova.conf:
 [cinder]
 os_region_name = RegionOne

==== Fix necessary for "500 Internal Server Error" ====

Details: [https://bugs.launchpad.net/cinder/+bug/1715024]

Change /etc/apache2/conf-available/cinder-wsgi.conf:
 WSGIDaemonProcess cinder-wsgi processes=5 threads=1 user=cinder display-name=%{GROUP}

to:
 WSGIDaemonProcess cinder-wsgi processes=5 threads=1 user=cinder group=cinder display-name=%{GROUP}

==== Restart the Block Storage service ====
 sudo service nova-api restart
 sudo service cinder-scheduler restart
 sudo service apache2 restart

== Storage Node ==

Details: [https://docs.openstack.org/ocata/install-guide-ubuntu/cinder-storage-install.html]

=== Prepare LVM ===

<b>WARNING: Double-check disk device name to avoid data loss!</b>

Assuming /dev/sdb is exclusively allocated for LVM!

Create the LVM physical volume on /dev/sdb and LVM volume group "cinder-volumes":
 sudo pvcreate -v /dev/sdb
 sudo pvscan
 vgcreate cinder-volumes /dev/sdb

Note: pvcreate only works on empty disks, i.e. without partition table. To clear "dd if=/dev/zero of=/dev/sdb bs=512 count=1".

Modify /etc/lvm/lvm.conf:
 filter = [ "a/sdb/", "r/.*/"]

Accept only volumes on /dev/sdb, reject others. May be adapted as needed! See [https://docs.openstack.org/ocata/install-guide-ubuntu/cinder-storage-install.html].

=== Configure Cinder ===

==== /etc/cinder/cinder.conf ====

Modify /etc/cinder/cinder.conf:
 [DEFAULT]
 transport_url = rabbit://openstack:<RabbitMQ-openstack-Password>@nisse.simula.nornet
 ...
 auth_strategy = keystone
 ...
 my_ip = 10.1.1.78
 ...
 enabled_backends = lvm
 ...
 glance_api_servers = http://nisse.simula.nornet:9292

 [database]
 connection = mysql+pymysql://cinder:<MariaDB-cinder-Password>@nisse.simula.nornet/cinder

 [keystone_authtoken]
 # ====== MELODIC/NorNet Core ======
 auth_uri = http://nisse.simula.nornet:5000
 auth_url = http://nisse.simula.nornet:35357
 memcached_servers = nisse.simula.nornet:11211
 auth_type = password
 project_domain_name = default
 user_domain_name = default
 project_name = service
 username = cinder
 password = <Keystone-cinder-Password>
 # ====== MELODIC/NorNet Core ======

 [oslo_concurrency]
 lock_path = /var/lib/cinder/tmp

 [lvm]
 volume_driver = cinder.volume.drivers.lvm.LVMVolumeDriver
 volume_group = cinder-volumes
 iscsi_protocol = iscsi
 iscsi_helper = tgtadm

==== Restart services ====
 sudo service tgt restart
 sudo service cinder-volume restart

== Verify operation ==
 openstack volume service list

= Dashboard (Horizon) =

Details: [https://docs.openstack.org/ocata/install-guide-ubuntu/horizon-install.html]

==== /etc/openstack-dashboard/local_settings.py ====

Modify /etc/openstack-dashboard/local_settings.py:
 ...
 SESSION_ENGINE = 'django.contrib.sessions.backends.cache'
 CACHES = {
    'default': {
       'BACKEND':  'django.core.cache.backends.memcached.MemcachedCache',
       'LOCATION': 'nisse.simula.nornet:11211',
    }
 }
 ...
 OPENSTACK_HOST = "nisse.simula.nornet"
 OPENSTACK_KEYSTONE_URL = "http://%s:5000/v3" % OPENSTACK_HOST
 OPENSTACK_KEYSTONE_DEFAULT_ROLE = "user"
 ...
 OPENSTACK_KEYSTONE_MULTIDOMAIN_SUPPORT = True
 OPENSTACK_API_VERSIONS = {
   "identity": 3,
   "image": 2,
   "volume": 2,
 }
 ...
 ALLOWED_HOSTS = [ '*' ]

Adjust ALLOWED_HOSTS as necessary.

==== Verify operation ====
* URL: http://nisse.simula.nornet/horizon
* User: "admin" or "nnc".

==== TLS ====

 sudo a2enmod headers ssl socache_shmcb

Configure /etc/apache2/sites-enabled/000-default.conf:
 <VirtualHost *:80>
         ServerSignature off
         ServerName nisse.nntb.no
         Redirect permanent / https://nisse.nntb.no/
 </VirtualHost>

 <VirtualHost *:443>
         ServerSignature off
         ServerName nisse.nntb.no
         SSLEngine on
         SSLOptions +StrictRequire
         SSLProtocol +ALL -SSLv2 -SSLv3 -TLSv1 -TLSv1.1
         SSLHonorCipherOrder on
         # State of the art settings:
         SSLCipherSuite ECDHE-ECDSA-AES256-GCM-SHA384: \
            ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-SHA384: \
            ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA: \
            ECDHE-RSA-AES256-SHA:AES256-SHA
         SSLCompression off
         # Add six earth month HSTS header for all users...
         Header add Strict-Transport-Security "max-age=15768000"
         # Further security headers (see https://securityheaders.io):
         Header always set X-Frame-Options "SAMEORIGIN"   
         Header always set X-XSS-Protection "1; mode=block"
         Header always set X-Content-Type-Options "nosniff"
         Header always set Content-Security-Policy "default-src https:"
         Header always set Referrer-Policy "strict-origin"
         Header unset X-Powered-By
         # Let's Encrypt:
         SSLCertificateFile /etc/ssl/0001_chain+param.pem
         SSLCertificateKeyFile /etc/ssl/nisse.nntb.no.key
         DocumentRoot /var/www/html
         <Directory />
                 SSLRequireSSL
                 Options FollowSymLinks
                 AllowOverride None
         </Directory>
 </VirtualHost>

Get certificate signed!

= Launch Instances =

Details: [https://docs.openstack.org/ocata/install-guide-ubuntu/launch-instance.html]

== Preparations ==

=== Security settings ===

By default, allow SSH and Ping:
 openstack security group rule create --proto icmp default
 openstack security group rule create --proto tcp --dst-port 22 default

=== Create flavor ===

 openstack flavor create --id 0    --vcpus 1  --ram   64               --disk 1 "Nano"

 openstack flavor delete "Amiga 4500"
 openstack flavor create --id 4500 --vcpus  1 --ram 1024               --disk 16 "Amiga 4500"
 openstack flavor delete "Amiga 5000"
 openstack flavor create --id 5000 --vcpus  1 --ram 1024  --swap  2048 --disk 16 "Amiga 5000"
 openstack flavor delete "Amiga 6000"
 openstack flavor create --id 6000 --vcpus  1 --ram 2048  --swap  2048 --disk 32 "Amiga 6000"
 openstack flavor delete "Amiga 8000"
 openstack flavor create --id 8000 --vcpus  4 --ram 4096  --swap  8192 --disk 64 "Amiga 8000"
 openstack flavor delete "Amiga 9000"
 openstack flavor create --id 9000 --vcpus 16 --ram 16384 --swap 16384 --disk 128 "Amiga 9000"

=== Create key pair ===
 ssh-keygen -q -N ""
 openstack keypair create --public-key ~/.ssh/id_rsa.pub mykey
 openstack keypair list

=== Checks ===
 openstack flavor list
 openstack image list
 openstack network list
 openstack security group list

== Create networks and subnets ==

=== NorNet ===
 openstack network create --share --external \
???    --disable-port-security \
    --provider-physical-network  nornet-simula \
    --provider-network-type flat nornet-simula

Note: nornet-simula must be defined in /etc/neutron/plugins/ml2/ml2_conf.ini!

 openstack subnet delete ipv4-nornet-uninett-simula
 openstack subnet delete ipv4-nornet-kvantel-simula
 openstack subnet delete ipv4-nornet-telenor-simula
 openstack subnet delete ipv4-nornet-powertech-simula
 openstack subnet delete ipv6-nornet-uninett-simula
 openstack subnet delete ipv6-nornet-kvantel-simula
 openstack subnet delete ipv6-nornet-telenor-simula
 openstack subnet delete ipv6-nornet-powertech-simula

 openstack subnet create ipv4-nornet-uninett-simula \
    --ip-version 4 --network nornet-simula \
    --description "NorNet IPv4 Uninett @ Simula Research Laboratory" \
    --dns-nameserver 10.1.1.1 --gateway 10.1.1.1 \
    --dhcp \
    --subnet-range 10.1.1.0/24
 openstack subnet set ipv4-nornet-uninett-simula --no-allocation-pool
 openstack subnet create ipv6-nornet-uninett-simula \
    --ip-version 6 --network nornet-simula \
    --description "NorNet IPv6 Uninett @ Simula Research Laboratory" \
    --dns-nameserver 2001:700:4100:101::1 --gateway 2001:700:4100:101::1 \
    --dhcp \
    --subnet-range 2001:700:4100:101::1/64
 openstack subnet set ipv6-nornet-uninett-simula --no-allocation-pool

 openstack subnet create ipv4-nornet-kvantel-simula \
    --ip-version 4 --network nornet-simula \
    --description "NorNet IPv4 Kvantel @ Simula Research Laboratory" \
    --no-dhcp \
    --dns-nameserver 10.2.1.1 --gateway 10.2.1.1 \
    --subnet-range 10.2.1.0/24
 openstack subnet set ipv4-nornet-kvantel-simula --no-allocation-pool
 openstack subnet create ipv6-nornet-kvantel-simula \
    --ip-version 6 --network nornet-simula \
    --description "NorNet IPv6 Kvantel @ Simula Research Laboratory" \
    --dhcp \
    --dns-nameserver 2001:700:4100:201::1 --gateway 2001:700:4100:201::1 \
    --subnet-range 2001:700:4100:201::1/64
 openstack subnet set ipv6-nornet-kvantel-simula --no-allocation-pool

 openstack subnet create ipv4-nornet-telenor-simula \
    --ip-version 4 --network nornet-simula \
    --description "NorNet IPv4 Telenor @ Simula Research Laboratory" \
    --no-dhcp \
    --dns-nameserver 10.4.1.1 --gateway 10.4.1.1 \
    --subnet-range 10.4.1.0/24
 openstack subnet set ipv4-nornet-telenor-simula --no-allocation-pool
 openstack subnet create --ip-version 6 --network nornet-simula \
    --description "NorNet IPv6 Telenor @ Simula Research Laboratory" \
    --dhcp \
    --dns-nameserver 2001:700:4100:401::1 --gateway 2001:700:4100:401::1 \
    --subnet-range 2001:700:4100:401::1/64 ipv6-nornet-telenor-simula
 openstack subnet set ipv6-nornet-telenor-simula --no-allocation-pool

 openstack subnet create ipv4-nornet-powertech-simula \
    --ip-version 4 --network nornet-simula \
    --description "NorNet IPv4 PowerTech @ Simula Research Laboratory" \
    --no-dhcp \
    --dns-nameserver 10.9.1.1 --gateway 10.9.1.1 \
    --subnet-range 10.9.1.0/24
 openstack subnet set ipv4-nornet-powertech-simula --no-allocation-pool
 openstack subnet create --ip-version 6 --network nornet-simula \
    --description "NorNet IPv6 PowerTech @ Simula Research Laboratory" \
    --dhcp \
    --dns-nameserver 2001:700:4100:901::1 --gateway 2001:700:4100:901::1 \
    --subnet-range 2001:700:4100:901::1/64 ipv6-nornet-powertech-simula
 openstack subnet set ipv6-nornet-powertech-simula --no-allocation-pool

=== UNINETT ===

 openstack network create --share --external \
    --provider-physical-network  uninett-simula \
    --provider-network-type flat uninett-simula

Note: uninett-simula must be defined in /etc/neutron/plugins/ml2/ml2_conf.ini!

== Create instances ==

=== Cirros ===

 openstack server delete vm-test1
 openstack server create vm-test1 \
    --wait --flavor Nano --image "Cirros-0.3.5-amd64" \
    --nic net-id=ebd704de-d1c7-425e-9137-2f860642db04 --security-group default \
    --key-name mykey
 openstack server list
 openstack console url show vm-test1

=== Kubuntu 1 ===

 openstack port delete port-test2
 openstack port create port-test2 \
    --network nornet-simula \
    --fixed-ip subnet=ipv4-nornet-uninett-simula,ip-address=10.1.1.246 \
    --fixed-ip subnet=ipv4-nornet-kvantel-simula,ip-address=10.2.1.246 \
    --fixed-ip subnet=ipv4-nornet-telenor-simula,ip-address=10.4.1.246 \
    --fixed-ip subnet=ipv4-nornet-powertech-simula,ip-address=10.9.1.246 \
    --fixed-ip subnet=ipv6-nornet-uninett-simula,ip-address=2001:700:4100:101::f6 \
    --fixed-ip subnet=ipv6-nornet-kvantel-simula,ip-address=2001:700:4100:201::f6 \
    --fixed-ip subnet=ipv6-nornet-telenor-simula,ip-address=2001:700:4100:401::f6 \
    --fixed-ip subnet=ipv6-nornet-powertech-simula,ip-address=2001:700:4100:901::f6 \
    --security-group default
 openstack server delete vm-test2
 openstack server create vm-test2 \
    --wait --flavor "Amiga 4500" \
    --image "Install-Kubuntu-Desktop-17.04-amd64" \
    --port port-test2 \
    --security-group default \
    --key-name mykey
 openstack server list
 openstack console url show vm-test2

=== Kubuntu 2 ===

 openstack port delete port-test3
 openstack port create port-test3 \
    --network nornet-simula \
    --fixed-ip subnet=ipv4-nornet-uninett-simula,ip-address=10.1.1.245 \
    --fixed-ip subnet=ipv4-nornet-kvantel-simula,ip-address=10.2.1.245 \
    --fixed-ip subnet=ipv4-nornet-telenor-simula,ip-address=10.4.1.245 \
    --fixed-ip subnet=ipv4-nornet-powertech-simula,ip-address=10.9.1.245 \
    --fixed-ip subnet=ipv6-nornet-uninett-simula,ip-address=2001:700:4100:101::f5 \
    --fixed-ip subnet=ipv6-nornet-kvantel-simula,ip-address=2001:700:4100:201::f5 \
    --fixed-ip subnet=ipv6-nornet-telenor-simula,ip-address=2001:700:4100:401::f5 \
    --fixed-ip subnet=ipv6-nornet-powertech-simula,ip-address=2001:700:4100:901::f5 \
    --security-group default
 openstack server delete vm-test3
 openstack server create vm-test3 \
    --wait --flavor "Amiga 4500" \
    --image "Install-Kubuntu-Desktop-17.04-amd64" \
    --port port-test3 \
    --security-group default \
    --key-name mykey
 openstack server list
 openstack console url show vm-test3
